// =========================================================
// src/routes/fedapayRoutes.js (VERSION COMPL√àTE OPTIMIS√âE)
// =========================================================

import express from 'express';
import {
  initFedapayPayment,
  handleFedapayWebhook,
  initFedapayEscrowPayment,
} from '../controllers/fedapayController.js';
import { isAuthenticated } from '../middleware/authMiddleware.js';
import { rawBodyMiddleware } from '../middleware/rawBodyMiddleware.js';

const router = express.Router();

/**
 * ==========================================
 * üéØ FedaPay ROUTES - PAYMENTS & WEBHOOKS
 * ==========================================
 */

/**
 * @route POST /api/fedapay/init-payment
 * @description Initialise un paiement FedaPay pour une commande de produits digitaux (E-commerce).
 * @access Private (Acheteur authentifi√©)
 */
router.post('/init-payment', isAuthenticated, initFedapayPayment);

/**
 * @route POST /api/fedapay/init-escrow
 * @description Initialise un paiement FedaPay en mode s√©questre (Freelance mission escrow).
 * @access Private (Client authentifi√©)
 * ‚öôÔ∏è Utilis√©e uniquement par le contr√¥leur FreelanceController lorsqu'une mission est accept√©e.
 */
router.post('/init-escrow', isAuthenticated, initFedapayEscrowPayment);

/**
 * @route POST /api/fedapay/webhook
 * @description Re√ßoit les notifications FedaPay (succ√®s, √©chec, escrow release, refund, etc.)
 * @access Public (appel√© directement par FedaPay)
 * ‚ö†Ô∏è Utilise rawBodyMiddleware pour valider la signature FedaPay avant parsing JSON
 */
router.post('/webhook', rawBodyMiddleware, handleFedapayWebhook);

export default router;