// src/routes/fileRoutes.js

import express from "express";
import multer from "multer";
import {
  uploadFile,
  getFileDownloadUrl,
  deleteFile,
  listFilesForProduct,
} from "../controllers/fileController.js";
// âœ… Utilisation du nom du middleware que nous avons dÃ©fini
import { authenticateJWT } from "../middleware/authMiddleware.js"; 

const router = express.Router();

// âš¡ Multer memory storage
const storage = multer.memoryStorage();
const upload = multer({ storage });

// ðŸ‘‰ POST /api/files/upload : Upload fichier pour un produit (vendeur ou admin)
router.post(
  "/upload",
  authenticateJWT,
  upload.single("file"), 
  uploadFile
);

// ðŸ‘‰ GET /api/files/product/:productId : Lister fichiers dâ€™un produit (owner/admin)
router.get("/product/:productId", authenticateJWT, listFilesForProduct);

// ðŸ‘‰ GET /api/files/download/:id : GÃ©nÃ©rer URL de tÃ©lÃ©chargement (acheteur, owner, admin)
router.get("/download/:id", authenticateJWT, getFileDownloadUrl);

// ðŸ‘‰ DELETE /api/files/:id : Supprimer fichier (owner ou admin)
router.delete("/:id", authenticateJWT, deleteFile);

export default router;
